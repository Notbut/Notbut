<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一章:数据结构</title>
      <link href="/2022/03/09/ADS2/"/>
      <url>/2022/03/09/ADS2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h1><p>在学习这一章的时候我真的是服啦,这些代码贼他妈长而且非常难理解。就这个链表就让我想了一天，感觉自己的智商受到侮辱。但是我发现这些内容呢都有一个特点，那就是用数组标记数值的位置，于是我凭借自己超高的智商终于弄懂这些模板。于是我趁热打铁，直接学习图论，最后我发现我又把这一章的内容忘完了，我准备重新学习一遍，然后我想记一下笔记。就在这时，我们学校的一个大佬(不是，我才是)写了一篇如何搭建个人博客，我激动不已，这就是我大一上学期想要的个人博客。因为当时自己啥都不知道(连Github都不知道是啥)，当时弄了一天就放弃了。我花了一星期的时间搭建好自己的博客(这下就可以在博客里记录学习的内容了)。我想让室友看一下我的博客，当时我还幻想室友羡慕我的博客的样子，可是有一只<strong>任某</strong>对洒家的博客指指点点，我灰常生气。他还说有本事我写一个二维游戏，所以 四月份，我将发布一个名为幻塔的游戏，尽请期待后续······</p><hr><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ol><li><h3 id="链表-树与图的存储"><a href="#链表-树与图的存储" class="headerlink" title="链表:树与图的存储"></a>链表:树与图的存储</h3><ul><li><h4 id="单链表-邻接表-存储图和树"><a href="#单链表-邻接表-存储图和树" class="headerlink" title="单链表:邻接表(存储图和树)"></a>单链表:邻接表(存储图和树)</h4></li><li><h4 id="双链表-优化某些问题"><a href="#双链表-优化某些问题" class="headerlink" title="双链表:优化某些问题"></a>双链表:优化某些问题</h4></li></ul></li><li><h3 id="栈与队列-单调栈，单调队列"><a href="#栈与队列-单调栈，单调队列" class="headerlink" title="栈与队列:单调栈，单调队列"></a>栈与队列:单调栈，单调队列</h3></li><li><h3 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h3></li><li><h3 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h3></li><li><h3 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h3></li><li><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3></li><li><h3 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h3></li></ol><hr><h3 id="lt-单链表-gt"><a href="#lt-单链表-gt" class="headerlink" title="&lt;单链表&gt;"></a>&lt;单链表&gt;</h3><p><img src="C:\Users\zaibugaizhongwen\Pictures\qq_pic_merged_1646810145335.jpg"></p><p>实现一个单链表，链表初始为空，支持三种操作：</p><p>向链表头插入一个数；<br>删除第 k 个插入的数后面的数；<br>在第 k 个插入的数后插入一个数。<br>现在要对该链表进行 M 次操作，进行完所有操作后，从头到尾输出整个链表。</p><p>注意 : 题目中第 k 个插入的数并不是指当前链表的第 k 个数。例如操作过程中一共插入了 n 个数，则按照插入的时间顺序，这 n 个数依次为：第 1 个插入的数，第 2 个插入的数，…第 n 个插入的数。</p><pre><code>输入格式第一行包含整数 M，表示操作次数。接下来 M 行，每行包含一个操作命令，操作命令可能为以下几种：H x，表示向链表头插入一个数 x。D k，表示删除第 k 个插入的数后面的数（当 k 为 0 时，表示删除头结点）。I k x，表示在第 k 个插入的数后面插入一个数 x（此操作中 k 均大于 0）。输出格式共一行，将整个链表从头到尾输出。数据范围1≤M≤100000所有操作保证合法。输入样例：10H 9I 1 1D 1D 0H 6I 3 6I 4 5I 4 5I 3 4D 6输出样例：6 4 6 5</code></pre><h4 id="题解一-有head"><a href="#题解一-有head" class="headerlink" title="题解一:有head"></a>题解一:有head</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> e[N], ne[N], head,i;</span><br><span class="line"><span class="comment">//初始化head以及第一个插入元素的位置，head和i可以取任意值，但head要小于i</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">head = <span class="number">-1</span>;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//看图解</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">head_insert</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">e[i] = x;</span><br><span class="line">ne[i] = head;</span><br><span class="line">head = i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将x插到下标为k的节点后(1.若下标从0开始k要减一。 2.若下标从1开始k不变)</span></span><br><span class="line"><span class="comment">//       或第k-1的节点后</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">e[i] = x;</span><br><span class="line">ne[i] = ne[k];</span><br><span class="line">ne[k] = i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">remove1</span><span class="params">(<span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">ne[k] = ne[ne[k]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> M;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">while</span> (M--)</span><br><span class="line">&#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="type">char</span> a; <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">head_insert(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;k, &amp;x);</span><br><span class="line">insert(k<span class="number">-1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>  k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">            <span class="comment">//这里重点说一下为什么k==0时为什么写成 head = ne[head] 而不是 ne[0]=ne[ne[0]]</span></span><br><span class="line">            <span class="comment">//因为它插入的不止一个头节点，所以ne[0]可能指向第二或第三等节点</span></span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">head = ne[head];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">remove1(k<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> t = head; t!=<span class="number">0</span>; t=ne[t])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,e[t]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="题解二-无head"><a href="#题解二-无head" class="headerlink" title="题解二:无head"></a>题解二:无head</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//相当于把ne[0]当成头节点，省略了初始化以及对头节点插入</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> e[N], ne[N],i;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">e[i] = x;</span><br><span class="line">ne[i] = ne[k];</span><br><span class="line">ne[k] = i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">remove1</span><span class="params">(<span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">ne[k] = ne[ne[k]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> M;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;M);</span><br><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (M--)</span><br><span class="line">&#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="type">char</span> a; <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">insert(<span class="number">0</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;k, &amp;x);</span><br><span class="line">insert(k, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>  k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">remove1(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> t = ne[<span class="number">0</span>]; t!=<span class="number">0</span>; t=ne[t])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,e[t]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-双链表-gt"><a href="#lt-双链表-gt" class="headerlink" title="&lt;双链表&gt;"></a>&lt;双链表&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// e[]表示节点的值，l[]表示节点的左指针，r[]表示节点的右指针，idx表示当前用到了哪个节点</span></span><br><span class="line"><span class="type">int</span> e[N], l[N], r[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//0是左端点，1是右端点</span></span><br><span class="line">    r[<span class="number">0</span>] = <span class="number">1</span>, l[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    idx = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在节点a的右边插入一个数x</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    e[idx] = x;</span><br><span class="line">    l[idx] = a, r[idx] = r[a];</span><br><span class="line">    l[r[a]] = idx, r[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除节点a</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">    l[r[a]] = l[a];</span><br><span class="line">    r[l[a]] = r[a];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="lt-栈-gt"><a href="#lt-栈-gt" class="headerlink" title="&lt;栈&gt;"></a>&lt;栈&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tt表示栈顶</span></span><br><span class="line"><span class="type">int</span> stk[N], tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向栈顶插入一个数</span></span><br><span class="line">stk[++tt] = x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从栈顶弹出一个数</span></span><br><span class="line">tt--;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栈顶的值</span></span><br><span class="line">stk[tt];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断栈是否为空</span></span><br><span class="line"><span class="keyword">if</span> (tt &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-队列-gt"><a href="#lt-队列-gt" class="headerlink" title="&lt;队列&gt;"></a>&lt;队列&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 普通队列：</span><br><span class="line"><span class="comment">// hh 表示队头，tt表示队尾</span></span><br><span class="line"><span class="type">int</span> q[N], hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向队尾插入一个数</span></span><br><span class="line">q[++tt] = x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从队头弹出一个数</span></span><br><span class="line">hh++;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 队头的值</span></span><br><span class="line">q[hh];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断队列是否为空</span></span><br><span class="line"><span class="keyword">if</span> (hh &lt;= tt)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2.</span> 循环队列</span><br><span class="line"><span class="comment">// hh 表示队头，tt表示队尾的后一个位置</span></span><br><span class="line"><span class="type">int</span> q[N], hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向队尾插入一个数</span></span><br><span class="line">q[tt++] = x;</span><br><span class="line"><span class="keyword">if</span> (tt == N) tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从队头弹出一个数</span></span><br><span class="line">hh++;</span><br><span class="line"><span class="keyword">if</span> (hh == N) hh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 队头的值</span></span><br><span class="line">q[hh];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断队列是否为空</span></span><br><span class="line"><span class="keyword">if</span> (hh != tt)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-单调栈-gt"><a href="#lt-单调栈-gt" class="headerlink" title="&lt;单调栈&gt;"></a>&lt;单调栈&gt;</h3><p>给定一个长度为 N 的整数数列，输出每个数左边第一个比它小的数，如果不存在则输出 −1。</p><p>输入格式<br>第一行包含整数 N，表示数列长度。</p><p>第二行包含 N 个整数，表示整数数列。</p><p>输出格式<br>共一行，包含 N 个整数，其中第 i 个数表示第 i 个数的左边第一个比它小的数，如果不存在则输出 −1。</p><p>数据范围<br>1≤N≤105<br>1≤数列中元素≤109<br>输入样例：<br>5<br>3 4 2 7 5<br>输出样例：</p><p>1 3 - 1 2 2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>], hh, tt;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">while</span> (tt!=<span class="number">0</span>&amp;&amp;x &lt;= a[tt])</span><br><span class="line">tt--;</span><br><span class="line"><span class="keyword">if</span> (tt == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1 &quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[tt]);</span><br><span class="line">a[++tt] = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-单调队列-gt-滑动窗口"><a href="#lt-单调队列-gt-滑动窗口" class="headerlink" title="&lt;单调队列&gt;(滑动窗口)"></a>&lt;单调队列&gt;(滑动窗口)</h3><p>给定一个大小为 n≤106 的数组。</p><p>有一个大小为 k 的滑动窗口，它从数组的最左边移动到最右边。</p><p>你只能在窗口中看到 k 个数字。</p><p>每次滑动窗口向右移动一个位置。</p><p>以下是一个例子：</p><p>该数组为[1 3 - 1 - 3 5 3 6 7]，k 为 3。</p><p>窗口位置    最小值    最大值<br>[1 3 - 1] - 3 5 3 6 7 - 1    3<br>1[3 - 1 - 3] 5 3 6 7 - 3    3<br>1 3[-1 - 3 5] 3 6 7 - 3    5<br>1 3 - 1[-3 5 3] 6 7 - 3    5<br>1 3 - 1 - 3[5 3 6] 7    3    6<br>1 3 - 1 - 3 5[3 6 7]    3    7<br>你的任务是确定滑动窗口位于每个位置时，窗口中的最大值和最小值。</p><p>输入格式<br>输入包含两行。</p><p>第一行包含两个整数 n 和 k，分别代表数组长度和滑动窗口的长度。</p><p>第二行有 n 个整数，代表数组的具体数值。</p><p>同行数据之间用空格隔开。</p><p>输出格式<br>输出包含两个。</p><p>第一行输出，从左至右，每个位置滑动窗口中的最小值。</p><p>第二行输出，从左至右，每个位置滑动窗口中的最大值。</p><p>输入样例：<br>8 3<br>1 3 - 1 - 3 5 3 6 7<br>输出样例：</p><p>1 - 3 - 3 - 3 3 3</p><p>3 3 5 5 6 7</p><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><p>我在做这道题的时候感觉有点难，于是我看了一下模板，但是没看懂。我决定自己想一下，于是我想出来了。但是超时了，我看了一下别人做的，说实话 那些人跟没说没啥区别，他们根本就没理解代码的真正意思，只是皮毛上理解了每代码是干啥的。就这还有一群天使给他们点赞。我来讲一下我的代码和正确代码的区别，以及这个代码真正的意思</p><p>我的代码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> q[<span class="number">1000010</span>], a[<span class="number">1000010</span>];</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; hh &lt; i - k + <span class="number">1</span>)<span class="comment">//区别一</span></span><br><span class="line">hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[q[tt]] &gt; a[i])</span><br><span class="line">q[tt--] = i;<span class="comment">//区别二</span></span><br><span class="line">tt=q[i] = i;<span class="comment">//区别三</span></span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">tt = hh = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; hh &lt; i - k + <span class="number">1</span>)</span><br><span class="line">hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[q[tt]] &lt; a[i])</span><br><span class="line">q[tt--] = i;</span><br><span class="line">tt=q[i] = i;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\zaibugaizhongwen\Documents\ShareX\Screenshots\2022-03\msedge_ZwXNkRx9j5.png"></p><p>正确代码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>], a[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; q[hh] &lt; i - k + <span class="number">1</span>)</span><br><span class="line">hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[q[tt]] &gt; a[i])</span><br><span class="line">tt--;</span><br><span class="line">q[++tt] = i;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); hh = tt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; q[hh] + k - <span class="number">1</span> &lt; i)</span><br><span class="line">hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[i] &gt; a[q[tt]])</span><br><span class="line">tt--;</span><br><span class="line">q[++tt] = i;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\zaibugaizhongwen\Documents\ShareX\Screenshots\2022-03\msedge_CTpOlrtkwN.png"></p><p>1.我的思路：把每个下标放在q[]中，因此我的比较容易理解，但耗时多了 75ms</p><p>2.正确答案的思路：把部分数的下标放在q[]中，部分直接打印出来，那么q[]里面到底存放那些值呢，我经过三小时的代码分析才弄懂，内容如下:</p><p>​                                           <em><strong>1 3 -1 -3 5 3 6 7</strong></em></p><table><thead><tr><th align="center">i的值</th><th align="center">窗口的数</th><th align="center">打印的值</th><th>q的值</th><th>hh</th><th>tt</th></tr></thead><tbody><tr><td align="center">i&#x3D;0</td><td align="center">1</td><td align="center"></td><td>q[0]&#x3D;0</td><td>0</td><td>0</td></tr><tr><td align="center">i&#x3D;1</td><td align="center">1 3</td><td align="center"></td><td>q[0]&#x3D;0 q[1]&#x3D;1</td><td>0</td><td>1</td></tr><tr><td align="center">i&#x3D;2</td><td align="center">1 3 -1</td><td align="center">-1</td><td>q[0]&#x3D;2 q[1]&#x3D;1</td><td>0</td><td>1</td></tr><tr><td align="center">i&#x3D;3</td><td align="center">3 -1 -3</td><td align="center">-3</td><td>q[0]&#x3D;3 q[1]&#x3D;1</td><td>0</td><td>1</td></tr><tr><td align="center">i&#x3D;4</td><td align="center">-1 -3 5</td><td align="center">-3</td><td>q[0]&#x3D;3 q[1]&#x3D;4</td><td>0</td><td>1</td></tr><tr><td align="center">i&#x3D;5</td><td align="center">-3 5 3</td><td align="center">-3</td><td>q[0]&#x3D;3 q[1]&#x3D;5</td><td>0</td><td>1</td></tr><tr><td align="center">i&#x3D;6</td><td align="center">5 3 6</td><td align="center">3</td><td>q[0]&#x3D;3 q[1]&#x3D;5 q[2]&#x3D;6</td><td>1</td><td>2</td></tr><tr><td align="center">i&#x3D;7</td><td align="center">3 6 7</td><td align="center">3</td><td>q[0]&#x3D;3 q[1]&#x3D;5 q[2]&#x3D;6 q[3]&#x3D;7</td><td>1</td><td>3</td></tr></tbody></table><p>不难发现q[hh]是用来存放极小值坐标，若下一个值打破了这种单调性，它就会存放到q[tt]中，若q[hh]+k&lt;i+1，hh就会加一，所以每次打印q[hh]。</p>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一章:基础算法</title>
      <link href="/2022/03/08/ADS1/"/>
      <url>/2022/03/08/ADS1/</url>
      
        <content type="html"><![CDATA[<h1 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h1><hr><h2 id="1-排序"><a href="#1-排序" class="headerlink" title="1.排序"></a>1.排序</h2><h3 id="lt-快速排序-gt"><a href="#lt-快速排序-gt" class="headerlink" title="&lt;快速排序&gt;"></a>&lt;快速排序&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> q[<span class="number">100000</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> x = q[l], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span> i++; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line"><span class="keyword">do</span> j--; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line"><span class="keyword">if</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp = q[i];</span><br><span class="line">q[i] = q[j];</span><br><span class="line">q[j] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">quick_sort(l, j);</span><br><span class="line">quick_sort(j+<span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">quick_sort(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)                                    </span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题1:递归时为什么不选其他的，非要选l,j和j+1,r<br>问题2:为什么l&gt;&#x3D;而不是l&gt;r或者l&#x3D;&#x3D;r<br>问题3:为什么x&#x3D;q[l]<br>问题4:为什么是do while</p><p>一: 1:如果是j,j 输入0,1第二个quick_sort的j,r还是0,1(死循环)<br>   2:如果是i,i 输入0,1第二个quick_sort的l,i还是0,1(死循环)<br>   3:      i,i+1 输入2 3 1输出结果错误(1 3 2)<br>   4:      j-1,j 输入1,2(死循环)<br>   5:<br>二:当l&#x3D;r 第一个quick_sort一直循环<br>三:l等价于(l+r)&#x2F;2 ———— (l,j) (j+1,r)<br>   r等价于(l+r+1)&#x2F;2 ———— (l,i-1) (i,r)<br>   这与quick_sort中j有关,前面j的取值就是因为这里限制的<br>四:如果是2 2 3 i和j最后都走不动了</p><h3 id="lt-归并排序-gt"><a href="#lt-归并排序-gt" class="headerlink" title="&lt;归并排序&gt;"></a>&lt;归并排序&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>], temp[<span class="number">100010</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid = (l + r) / <span class="number">2</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//进行两段排序</span></span><br><span class="line">merge_sort(l, mid);</span><br><span class="line">merge_sort(mid+<span class="number">1</span>, r);</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>,<span class="type">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将两段合并</span></span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">if</span> (q[i] &gt; q[j])</span><br><span class="line">  temp[k++] = q[j++];</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">  temp[k++] = q[i++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (j &lt;= r) </span><br><span class="line">temp[k++] = q[j++];</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid) </span><br><span class="line">temp[k++] = q[i++];</span><br><span class="line"></span><br><span class="line"><span class="comment">//将排好序的片段打印到q中</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = l,j=<span class="number">0</span>; i &lt;= r; i++,j++)</span><br><span class="line">q[i] = temp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">merge_sort(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, temp[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="2-二分"><a href="#2-二分" class="headerlink" title="2.二分"></a>2.二分</h2><h3 id="lt-整数二分-gt"><a href="#lt-整数二分-gt" class="headerlink" title="&lt;整数二分&gt;"></a>&lt;整数二分&gt;</h3><p>整数二分是比较令人头疼的，第一次接触二分是鹏哥讲c语言的时候，当时听得很吃力他那种二分只能寻找某个数字是否存在，后来学算法的时候听y总讲二分，以为当时就明白了，后来才发现自己理解的不是很全面，今天特此写一下二分。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r],</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= q[mid]) </span><br><span class="line">    r = mid;    <span class="comment">// 判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">    l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= q[mid]) </span><br><span class="line">    l = mid;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">    r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先要明白的是二分的本质是边界，不止局限于单调性，只要数组左右两边符合某种性质就可以二分，最后找到符合这种性质的边界。就以bsearch1为例:</p><p>Top1:先把q分成[l,mid]和[mid+1,r]两段，若q[mid]符合这种性质，x在[mid+1,r]这一段。</p><p>Top2:一直二分，直到找到符合这种性质的临界点。</p><p>Top3:当l&#x3D;&#x3D;r时q[l]或q[r]就是临界值，输出l或r。</p><h3 id="lt-浮点数二分-gt"><a href="#lt-浮点数二分-gt" class="headerlink" title="&lt;浮点数二分&gt;"></a>&lt;浮点数二分&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> x;</span><br><span class="line"><span class="type">double</span> <span class="title function_">bsearch</span><span class="params">(<span class="type">double</span> l, <span class="type">double</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> mid;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; <span class="number">1e-8</span>)<span class="comment">//这里的精度一般比题目中的大2</span></span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (mid*mid*mid &gt; x)<span class="comment">//是几分就乘以几个mid</span></span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mid;<span class="comment">//输出l，r，mid都可以</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6f&quot;</span>, bsearch(<span class="number">-10000</span>, <span class="number">10000</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-高精度"><a href="#3-高精度" class="headerlink" title="3.高精度"></a>3.高精度</h2><h3 id="lt-高精度-A-B-gt"><a href="#lt-高精度-A-B-gt" class="headerlink" title="&lt;高精度: A + B &gt;"></a>&lt;高精度: A + B &gt;</h3><p>给定两个正整数（不含前导0），计算它们的和。</p><p>输入格式</p><p>共两行，每行包含一个整数。</p><p>输出格式</p><p>共一行，包含所求的和。</p><p>数据范围</p><p>1≤整数长度≤100000</p><p>输入样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12</span><br><span class="line">23</span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">35</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> ch1[<span class="number">100010</span>], ch2[<span class="number">100010</span>], ch3[<span class="number">100010</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">my_strrev</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tem = ch2[l];</span><br><span class="line">ch2[l] = ch2[r];</span><br><span class="line">ch2[r] = tem;</span><br><span class="line">l++, r--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, ch1, ch2);</span><br><span class="line"><span class="type">int</span> len1 = <span class="built_in">strlen</span>(ch1), len2 = <span class="built_in">strlen</span>(ch2);<span class="comment">//求A和B长度</span></span><br><span class="line"><span class="type">int</span> r = len1 - <span class="number">1</span>, l = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逆序便于从个位开始</span></span><br><span class="line">my_strrev(<span class="number">0</span>, len1 - <span class="number">1</span>);</span><br><span class="line">my_strrev(<span class="number">0</span>, len2 - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将字符数字转化为整形</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = len1; i &lt; j; i++)</span><br><span class="line">ch1[i] -= <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = len2; i &lt; j; i++)</span><br><span class="line">ch2[i] -= <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; i &lt; len1 || i &lt; len2; i++)</span><br><span class="line">&#123;</span><br><span class="line">ch3[i] = (t + ch1[i] + ch2[i]) % <span class="number">10</span>;</span><br><span class="line">t = (t + ch1[i] + ch2[i]) / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先输出最高位，若为0不输出</span></span><br><span class="line"><span class="keyword">if</span> (t)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span> (i--; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ch3[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-高精度-A-B-gt-1"><a href="#lt-高精度-A-B-gt-1" class="headerlink" title="&lt;高精度: A - B &gt;"></a>&lt;高精度: A - B &gt;</h3><p>给定两个正整数（不含前导0），计算它们的差，计算结果可能为负数。</p><p>输入格式</p><p>共两行，每行包含一个整数。</p><p>输出格式</p><p>共一行，包含所求的差。</p><p>数据范围</p><p>1≤整数长度≤100000</p><p>输入样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">32</span><br><span class="line">11</span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> ta[<span class="number">100010</span>], tb[<span class="number">100010</span>];<span class="type">char</span> a[<span class="number">100010</span>], b[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> c[<span class="number">100010</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">strrev1</span><span class="params">(<span class="type">char</span> *h)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="built_in">strlen</span>(h) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tem = *(h + i);</span><br><span class="line">*(h + i) = *(h + j);</span><br><span class="line">*(h + j) = tem;</span><br><span class="line">i++, j--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, ta, tb);</span><br><span class="line"><span class="type">int</span> len1 = <span class="built_in">strlen</span>(ta), len2 = <span class="built_in">strlen</span>(tb);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断ta和tb大小，把大数a==大数，b==小数，len1==大数长度，len2==小数长度</span></span><br><span class="line"><span class="keyword">if</span> (len1 &lt; len2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(a, tb);</span><br><span class="line"><span class="built_in">strcpy</span>(b, ta);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">t = len1, len1 = len2, len2 = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (len1 == len2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(ta,tb)&lt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(a, tb);</span><br><span class="line"><span class="built_in">strcpy</span>(b, ta);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">t = len1, len1 = len2, len2 = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(ta, tb) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(a, ta);</span><br><span class="line"><span class="built_in">strcpy</span>(b, tb);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(a, ta);</span><br><span class="line"><span class="built_in">strcpy</span>(b, tb);</span><br><span class="line">&#125;</span><br><span class="line">strrev1(a), strrev1(b);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不能省略，111 22</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len1; i++)a[i] -= <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len2; i++)b[i] -= <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>; i &lt; len1; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i] -= t;</span><br><span class="line">t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt;= b[i])</span><br><span class="line">c[i] = a[i] - b[i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">c[i] = <span class="number">10</span> + a[i] - b[i];</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = len1 - <span class="number">1</span>, flag = <span class="number">0</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (c[i] == <span class="number">0</span> &amp;&amp; flag == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-高精度-A-b-gt"><a href="#lt-高精度-A-b-gt" class="headerlink" title="&lt;高精度:A * b&gt;"></a>&lt;高精度:A * b&gt;</h3><p>给定两个非负整数（不含前导 0） A 和 B，请你计算 A×B的值。</p><p>输入格式</p><p>共两行，第一行包含整数 A，第二行包含整数 B。</p><p>输出格式</p><p>共一行，包含 A×B 的值。</p><p>数据范围</p><p>1≤A的长度≤100000<br>0≤B≤10000</p><p>输入样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> A[<span class="number">100010</span>]; <span class="type">int</span>  b;</span><br><span class="line"><span class="type">char</span> c[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, A, &amp;b);</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(A);</span><br><span class="line"><span class="type">int</span> l = <span class="number">0</span>, r = len - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tem = A[l];</span><br><span class="line">A[l] = A[r];</span><br><span class="line">A[r] = tem;</span><br><span class="line">l++, r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">A[i] -= <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//代码模板</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len || t; i++)</span><br><span class="line">&#123;</span><br><span class="line">t += A[i] * b;</span><br><span class="line">c[i] = t % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">len = <span class="built_in">strlen</span>(c);</span><br><span class="line">l = <span class="number">0</span>, r = len - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tem = c[l];</span><br><span class="line">c[l] = c[r];</span><br><span class="line">c[r] = tem;</span><br><span class="line">l++, r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; c[i] != <span class="number">0</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (c[i] == <span class="string">&#x27;0&#x27;</span>&amp;&amp;flag == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c[i]),flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//注意</span></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-高精度-A-x2F-b-gt"><a href="#lt-高精度-A-x2F-b-gt" class="headerlink" title="&lt;高精度:A &#x2F; b&gt;"></a>&lt;高精度:A &#x2F; b&gt;</h3><p>给定两个非负整数（不含前导 0） A，B,请你计算 A&#x2F;B的商和余数。</p><p>输入格式</p><p>共两行，第一行包含整数 A，第二行包含整数 B。</p><p>输出格式</p><p>共两行，第一行输出所求的商，第二行输出所求余数。</p><p>数据范围</p><p>1≤A的长度≤100000<br>1≤B≤10000<br>B一定不为 0</p><p>输入样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> A[<span class="number">100010</span>]; <span class="type">int</span> b;<span class="type">char</span> c[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, A, &amp;b);</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(A), t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">t = (t * <span class="number">10</span>) + (A[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">c[i] = (t / b) + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">t = t - (c[i] - <span class="string">&#x27;0&#x27;</span>) * b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//模板</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; c[i] != <span class="number">0</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span> &amp;&amp; c[i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c[i]);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//注意</span></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, t);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-前缀和"><a href="#4-前缀和" class="headerlink" title="4.前缀和"></a>4.前缀和</h2><h3 id="lt-一维前缀和-gt"><a href="#lt-一维前缀和-gt" class="headerlink" title="&lt;一维前缀和&gt;"></a>&lt;一维前缀和&gt;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">S[i] = a[<span class="number">1</span>] + a[<span class="number">2</span>] + ... a[i]</span><br><span class="line">a[l] + ... + a[r] = S[r] - S[l - <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="lt-二维前缀和-gt"><a href="#lt-二维前缀和-gt" class="headerlink" title="&lt;二维前缀和&gt;"></a>&lt;二维前缀和&gt;</h3><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x 1,y 1,x 2,y 2，表示一个子矩阵的左上角坐标和右下角坐标。</p><p>对于每个询问输出子矩阵中所有数的和。</p><p>输入格式</p><p>第一行包含三个整数 n，m，q</p><p>接下来 n行，每行包含 mm 个整数，表示整数矩阵。</p><p>接下来 q 行，每行包含四个整数  x 1   y 1    x 2   y 2，表示一组询问。</p><p>输出格式</p><p>共 q 行，每行输出一个询问的结果。</p><p>数据范围</p><p>1≤n,m≤1000<br>1≤q≤200000<br>1  ≤x 1  ≤  x 2  ≤n<br>1≤  y 1≤y 2  ≤m<br>−1000≤矩阵内元素的值≤1000</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">S[i, j] = 第i行j列格子左上部分所有元素的和以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵的和为:</span><br><span class="line">S[x2, y2] - S[x1 - <span class="number">1</span>, y2] - S[x2, y1 - <span class="number">1</span>] + S[x1 - <span class="number">1</span>, y1 - <span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> s[<span class="number">1001</span>][<span class="number">1001</span>], a[<span class="number">1001</span>][<span class="number">1001</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m,&amp;q);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span> ,j = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span> ,j = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">s[i][j] = a[i][j]+s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x1, x2, y1, y2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[x2][y2] - s[x1 - <span class="number">1</span>][y2] - s[x2][y1 - <span class="number">1</span>] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);<span class="comment">//注意</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="5-差分"><a href="#5-差分" class="headerlink" title="5.差分"></a>5.差分</h2><h3 id="lt-一维差分-gt"><a href="#lt-一维差分-gt" class="headerlink" title="&lt;一维差分&gt;"></a>&lt;一维差分&gt;</h3><p>输入一个长度为 n 的整数序列。</p><p>接下来输入 m 个操作，每个操作包含三个整数 l,r,c，表示将序列中 [l,r]之间的每个数加上 c。</p><p>请你输出进行完所有操作后的序列。</p><p>输入格式</p><p>第一行包含两个整数 n 和 m。</p><p>第二行包含 n 个整数，表示整数序列。</p><p>接下来 m 行，每行包含三个整数 l，r，c表示一个操作。</p><p>输出格式</p><p>共一行，包含 n个整数，表示最终序列。</p><p>数据范围</p><p>1≤n,m≤1000001≤n,m≤100000,<br>1≤l≤r≤n<br>−1000≤c≤1000<br>−1000≤整数序列中元素的值≤1000</p><p>输入样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 2 2 1 2 1</span><br><span class="line">1 3 1</span><br><span class="line">3 5 1</span><br><span class="line">1 6 1</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 5 3 4 2</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>], b[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">b[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l, r, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;l, &amp;r, &amp;c);</span><br><span class="line">b[l] += c; b[r + <span class="number">1</span>] -= c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i] = b[i] + b[i - <span class="number">1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, b[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-二维差分-gt"><a href="#lt-二维差分-gt" class="headerlink" title="&lt;二维差分&gt;"></a>&lt;二维差分&gt;</h3><p>输入一个 n行 m 列的整数矩阵，再输入 q 个操作，每个操作包含五个整数 x 1,y 1,x 2,y 2,c其中 (x 1,y 1)和 (x 2,y 2)表示一个子矩阵的左上角坐标和右下角坐标。</p><p>每个操作都要将选中的子矩阵中的每个元素的值加上 c。</p><p>请你将进行完所有操作后的矩阵输出。</p><p>输入格式</p><p>第一行包含整数 n,m,q</p><p>接下来 n 行，每行包含 m 个整数，表示整数矩阵。</p><p>接下来 q 行，每行包含 55 个整数 x 1,y 1,x 2,y 2,c，表示一个操作。</p><p>输出格式</p><p>共 n 行，每行 m 个整数，表示所有操作进行完毕后的最终矩阵。</p><p>数据范围</p><p>1≤n,m≤1000<br>1≤q≤100000<br>1≤x 1≤x 2≤n<br>1≤y 1≤y 2≤m<br>−1000≤c≤1000<br>−1000≤矩阵内元素的值≤1000</p><p>输入样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3 4 3</span><br><span class="line">1 2 2 1</span><br><span class="line">3 2 2 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 2 2 1</span><br><span class="line">1 3 2 3 2</span><br><span class="line">3 1 3 4 1</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 1</span><br><span class="line">4 3 4 1</span><br><span class="line">2 2 2 2</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">1010</span>][<span class="number">1010</span>], b[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m, n,q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m,&amp;q);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">b[i][j] = a[i][j] - a[i - <span class="number">1</span>][j] - a[i][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x1, y1, x2, y2,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2,&amp;c);</span><br><span class="line">b[x1][y1] += c; b[x1][y2+<span class="number">1</span>] -= c; b[x2+<span class="number">1</span>][y1] -= c; b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">b[i][j] += b[i - <span class="number">1</span>][j] + b[i][j - <span class="number">1</span>] - b[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, b[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="6-位运算"><a href="#6-位运算" class="headerlink" title="6.位运算"></a>6.位运算</h2><h3 id="lt-位运算-gt"><a href="#lt-位运算-gt" class="headerlink" title="&lt;位运算&gt;"></a>&lt;位运算&gt;</h3><p>学的位运算就两种还是比较简单<br>1.求n的第k位数字: n &gt;&gt; k &amp; 1<br>2.返回n的最后一位1: t(n) &#x3D; n &amp; -n   &#x2F;&#x2F;注意负数以补码形式存储</p><hr><h2 id="7-双指针算法习题："><a href="#7-双指针算法习题：" class="headerlink" title="7.双指针算法习题："></a>7.双指针算法习题：</h2><h3 id="一：最长连续不重复子序列"><a href="#一：最长连续不重复子序列" class="headerlink" title="一：最长连续不重复子序列"></a>一：最长连续不重复子序列</h3><p>给定一个长度为 n 的整数序列，请找出最长的不包含重复的数的连续区间，输出它的长度。</p><p>输入格式<br>第一行包含整数 n。</p><p>第二行包含 n 个整数（均在 0∼105 范围内），表示整数序列。</p><p>输出格式<br>共一行，包含一个整数，表示最长的不包含重复的数的连续区间的长度。</p><p>数据范围<br>1≤n≤105<br>输入样例:<br>5<br>1 2 2 3 5<br>输出样例:<br>3</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">10010</span>], count[<span class="number">10010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="type">int</span> max = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//核心</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">count[a[j]]++;</span><br><span class="line"><span class="keyword">while</span> (count[a[j]] &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">count[a[i]]--;</span><br><span class="line">i++;</span><br><span class="line">&#125;<span class="comment">//</span></span><br><span class="line">        </span><br><span class="line">flag = j - i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (max &lt; flag)</span><br><span class="line">max = flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二：-数组元素的目标和"><a href="#二：-数组元素的目标和" class="headerlink" title="二： 数组元素的目标和"></a>二： 数组元素的目标和</h3><p>给定两个升序排序的有序数组 A 和 B，以及一个目标值 x。</p><p>数组下标从 0 开始。</p><p>请你求出满足 A[i] + B[j] &#x3D; x 的数对(i, j)。</p><p>数据保证有唯一解。</p><p>输入格式<br>第一行包含三个整数 n, m, x，分别表示 A 的长度，B 的长度以及目标值 x。</p><p>第二行包含 n 个整数，表示数组 A。</p><p>第三行包含 m 个整数，表示数组 B。</p><p>输出格式<br>共一行，包含两个整数 i 和 j。</p><p>数据范围<br>数组长度不超过 105。<br>同一数组内元素各不相同。<br>1≤数组元素≤109<br>输入样例:<br>4 5 6<br>1 2 4 7<br>3 4 6 8 9<br>输出样例:<br>1 1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间复杂度:n*logm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>], b[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;x);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l = <span class="number">0</span>, r = m;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (a[i] + b[mid] &gt;= x)</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a[i] + b[l] == x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, i, l);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="8-未搞懂"><a href="#8-未搞懂" class="headerlink" title="8.未搞懂"></a>8.未搞懂</h2><h3 id="lt-离散化-gt"><a href="#lt-离散化-gt" class="headerlink" title="&lt;离散化&gt;"></a>&lt;离散化&gt;</h3><h3 id="lt-区间合并-gt"><a href="#lt-区间合并-gt" class="headerlink" title="&lt;区间合并&gt;"></a>&lt;区间合并&gt;</h3><p><strong>因为y总用c++讲的，看不懂代码，后面哈希表会讲到</strong></p>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2022/03/01/hello-world/"/>
      <url>/2022/03/01/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="copy-settings"><a href="#copy-settings" class="headerlink" title="copy settings"></a>copy settings</h1><h1 id="copyright-Add-the-copyright-information-after-copied-content-複製的內容後面加上版權信息"><a href="#copyright-Add-the-copyright-information-after-copied-content-複製的內容後面加上版權信息" class="headerlink" title="copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)"></a>copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</h1><p>copy:<br>  enable: true<br>  copyright:<br>    enable: false<br>    limit_count: 5000</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
